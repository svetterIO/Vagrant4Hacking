# -*- mode: ruby -*-
# vi: set ft=ruby :

# vagrant up --provider virtualbox
# vagrant up --provider vmware_desktop
# permanent with Vagrantfile:
ENV['VAGRANT_DEFAULT_PROVIDER'] = 'vmware_desktop'
# temporary via cmd:
# export VAGRANT_DEFAULT_PROVIDER='vmware_desktop'
# $Env:VAGRANT_DEFAULT_PROVIDER = 'vmware_desktop'

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # Use Ubuntu Trusty (14.x) 64-bit
  config.vm.box = "generic/ubuntu2004"
  # config.vm.box = "ubuntu/focal64"
  # config.vm.box = "bento/ubuntu-20.04" 
  #vagrant plugin install vagrant-disksize
  config.disksize.size = '60GB'

  # Virtualbox GUI
  config.vm.provider "virtualbox" do |v|
    v.memory = 8128
    v.cpus = 4
    v.gui = ARGV.include?("--with-gui") ? true : false
    v.customize ["modifyvm", :id, "--usb", "on"]
	# Enable USB 3.0/3.1 controller
    v.customize ["modifyvm", :id, "--usb", "on"]
    v.customize ["modifyvm", :id, "--usbxhci", "on"]
    # fix for slow network
    # v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    # v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    # v.customize ["modifyvm", :id, "--nictype1", "virtio"]
	# v.name = "Ubuntu20.04"
    # v.customize ["modifyvm", :id, "--groups", "/AndroidAppHacking"]
  end
  
  ## VMWare GUI
  config.vm.provider "vmware_desktop" do |v|
    v.vmx["memsize"] = "8128"
    v.vmx["numvcpus"] = "4"
    v.force_vmware_license = "workstation"  # force the licence for fix some vagrant plugin issue
    v.gui = ARGV.include?("--with-gui") ? true : false
    v.vmx["usb.present"] = "true"
	# v.name = "AndroidAppHacking_Ubuntu20.04"
    # fix for slow network
    # v.vmx["natdnshostresolver1"] = "on"
    # v.vmx["natdnsproxy1"] = "on"
    # v.vmx["ethernet1.virtualDev"] = "virtio"
  end
  
  config.vm.define "AndroidAppHacking_Ubuntu20.04" do |target|
    #Â BOX
    target.vm.provider "virtualbox" do |v|
      v.name = "Ubuntu20.04"
      v.customize ["modifyvm", :id, "--groups", "/AndroidAppHacking"]
    end
  end
  # Install Dependencies (window manager)
  # config.vm.provision :shell, path: "scripts/install_deps.sh"

  # install profile.d hooks, need to to this with shell
  # because file provisions are not run as sudo
  # config.vm.provision :shell,
    # inline: "cp /vagrant/scripts/android_vagrant_env.sh /etc/profile.d/"

  # config.vm.provision "docker" do |d|
    # if ENV["DOCKER_PULL"]
      # ENV["DOCKER_PULL"].split(",").each do |container|
        # d.pull_images container
      # end
    # end
    # if ENV["DOCKER_BUILD"]
      # ENV["DOCKER_BUILD"].split(",").each do |container|
        # d.build_image "/vagrant/docker/" + File.basename(container), args: "-t " + container
      # end
    # end
    # if ENV["DOCKER_RUN"]
      # ENV["DOCKER_RUN"].split(",").each do |container|
        # d.run container, args: "-d -v /tmp/.X11-unix:/tmp/.X11-unix \
                                # -e DISPLAY=$DISPLAY -privileged \
                                # -v /dev/bus/usb:/dev/bus/usb \
                                # --restart=always"
      # end
    # end
  # end
end
